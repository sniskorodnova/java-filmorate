create table if not exists "rating_mpaa"
(
    rating_mpaa_id integer generated by default as identity primary key,
    name varchar(100) NOT NULL
);

create table if not exists "genre"
(
    genre_id integer generated by default as identity primary key,
    name varchar(100) NOT NULL
);

create table if not exists "film"
(
    film_id long generated by default as identity primary key,
    name varchar(100),
    description varchar(255),
    release_date date,
    duration long,
    rating_mpaa_id integer references "rating_mpaa" (rating_mpaa_id)
);

create table if not exists "film_genre"
(
    film_id long references "film" (film_id),
    genre_id integer references "genre" (genre_id)
);

create table if not exists "user"
(
    user_id long generated by default as identity primary key,
    email varchar(100) UNIQUE,
    login varchar(100) UNIQUE,
    name varchar(100),
    birthday date
);

create table if not exists "user_film_likes"
(
    user_id long references "user" (user_id),
    film_id integer references "film" (film_id)
);

create table if not exists "friendship"
(
    friendship_id long generated by default as identity primary key,
    user_id long references "user" (user_id),
    friend_id long references "user" (user_id),
    confirmed boolean
);

create unique index if not exists user_film_likes_uindex
    on "user_film_likes" (user_id, film_id);

create unique index if not exists film_genre_uindex
    on "film_genre" (film_id, genre_id);

create index if not exists film_index
    on "film" (name);